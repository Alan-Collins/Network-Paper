}
#reference medium plot
uni.melt <- melt(as.matrix(uni))
ggplot(uni.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1,  vjust = 0.5 )) +
#  theme(legend.position="none") +
scale_y_continuous(expand = c(0, 0), limits = c(0,220)) +
ggsave(filename = "scatterplot gene expression in biolog.pdf", width = 12, height = 7, units = "in")
# variance in biolog plot
uni.thresh <- as.matrix(log2(sweep(uni, 1, apply(uni,1,mean),  FUN = "/")))
uni.thresh.melt <- melt(as.matrix(uni.thresh))
ggplot(uni.thresh.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Log2 ratio expression (relative to mean)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
#  theme(legend.position="none") +
ggsave(filename = "scatterplot ratio gene expression in biolog.pdf", width = 12, height = 7, units = "in")
#Plot per 1000 reads
dat$uni <- apply(uni,1,FUN = mean)
dat.melt <- melt(as.matrix(dat))
View(dat.melt)
ggplot(dat.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Condition") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1)) +
theme(legend.position="none") +
geom_text(data = dat.melt[dat.melt$Var2 == "uni",], aes(x = dat.melt$Var1[dat.melt$Var2 == "uni"],
y = dat.melt$value[dat.melt$Var2 == "uni"]), label = "--")+
scale_y_continuous(expand = c(0, 0), limits = c(0,220)) +
ggsave(filename = "scatterplot gene expression per 1000 reads.pdf", width = 12, height = 7, units = "in")
ggplot(dat.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Condition") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1)) +
theme(legend.position="none") +
geom_text(data = dat.melt[dat.melt$Var2 == "uni",], aes(x = dat.melt$Var1[dat.melt$Var2 == "uni"],
y = dat.melt$value[dat.melt$Var2 == "uni"]), label = "--")+
scale_y_continuous(expand = c(0, 0), limits = c(0,300)) +
ggsave(filename = "scatterplot gene expression per 1000 reads.pdf", width = 12, height = 7, units = "in")
dat.Z <- as.matrix(sweep(sweep(dat, 1, apply(uni,1,mean), FUN = "-"), 1, apply(uni, 1, sd), FUN = "/"))
dat.p <- 2*pnorm(-abs(dat.Z))
dat.p.melt <- melt(as.matrix(dat.p))
dat.p.melt$BH <- p.adjust(dat.p.melt$value, method = "BH")
dat.thresh <- as.matrix(log2(sweep(dat, 1, apply(uni,1,mean),  FUN = "/")))
dat.unthresh <- dat.thresh
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 53) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
length(rownames(dat))
length(colnames(dat.thresh))
View(dat.thresh)
dat.thresh <- dat.thresh[,-51]
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 53) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
dat.thresh[2*pnorm(-abs(dat.Z)) >0.05] <- 0
dat.thresh[abs(dat.thresh) < 1] <- 0
dat.thresh <- as.matrix(log2(sweep(dat, 1, apply(uni,1,mean),  FUN = "/")))
dat.thresh <- dat.thresh[,-51]
colnames(dat.thresh)
length(colnames(dat.thresh))
length(rownames(dat))
length(rownames(dat.thresh))
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 50) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
View(nanostring.phenotypes)
for(i in 1:length(rownames(dat.thresh))){
for(j in 1:length(colnames(dat.thresh))){
nanostring.phenotypes$Expression[(i-1)*53+j] <- dat.thresh[i,j]
}
}
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 50) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
for(i in 1:length(rownames(dat.thresh))){
for(j in 1:length(colnames(dat.thresh))){
nanostring.phenotypes$Expression[(i-1)*50+j] <- dat.thresh[i,j]
}
}
no.change.rows <- which(nanostring.phenotypes$Expression ==0)
nanostring.phenotypes$Label <- NA
nanostring.phenotypes$Label[-no.change.rows] <- as.character(nanostring.phenotypes$Condition[-no.change.rows])
melt.dat.unthresh <- melt(dat.unthresh)
ggplot(melt.dat.unthresh, aes(x=Var1, y=value, col="black")) +
geom_point(data = melt.dat.unthresh, aes(x=Var1, y=value, col="black"),position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression.pdf", width = 15, height = 5, units = "in")
ggplot(melt.dat.unthresh, aes(x=Var2, y=value, col="black")) +
geom_point(position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot CS expression.pdf", width = 15, height = 5, units = "in")
melt.dat.thresh <- melt(dat.thresh)
melt.dat.thresh.original <- melt.dat.thresh
melt.dat.thresh <- melt.dat.thresh[which(dat.p.melt$BH <0.05),]
melt.dat.thresh.removed <- melt.dat.unthresh[which(dat.p.melt$BH >0.05),]
melt.dat.thresh.removed <- melt.dat.thresh.removed[which(melt.dat.thresh.removed$Var2 != "uni"),]
mylabels <- c(expression("Pfl01_0048"), expression("Pfl01_0050"), expression(italic("lapD")), expression("Pfl01_0190"), expression("Pfl01_0192"), expression("Pfl01_0264"),
expression("Pfl01_0460"), expression(italic("gcbA")), expression("Pfl01_0692"), expression("Pfl01_0958"), expression(italic("wspR")), expression("Pfl01_1252"),
expression("Pfl01_1323"), expression("Pfl01_1336"), expression("Pfl01_1532"), expression(italic("rapA")), expression(italic("gcbB")), expression("Pfl01_1887"),
expression("Pfl01_2049"), expression("Pfl01_2170"), expression("Pfl01_2176"), expression("Pfl01_2295"), expression("Pfl01_2297"), expression("Pfl01_2525"),
expression("Pfl01_2709"), expression("Pfl01_2920"), expression("Pfl01_3039"), expression("Pfl01_3508"), expression("Pfl01_3550"), expression("Pfl01_3800"),
expression("Pfl01_3860"), expression("Pfl01_3972"), expression("Pfl01_4008"), expression("Pfl01_4084"), expression("Pfl01_4086"), expression("Pfl01_4150"),
expression("Pfl01_4257"), expression("Pfl01_4307"), expression("Pfl01_4451"), expression("Pfl01_4487"), expression("Pfl01_4551"), expression("Pfl01_4552"),
expression(italic("gcbC")), expression("Pfl01_4876"), expression("Pfl01_4884"), expression("Pfl01_5150"), expression("Pfl01_5168"), expression("Pfl01_5255"),
expression("Pfl01_5518"), expression("Pfl01_5643"))
order <- c("Pfl01_0048", "Pfl01_0050", "lapD", "Pfl01_0190", "Pfl01_0192", "Pfl01_0264",
"Pfl01_0460", "gcbA", "Pfl01_0692", "Pfl01_0958", "wspR", "Pfl01_1252",
"Pfl01_1323", "Pfl01_1336", "Pfl01_1532", "rapA", "gcbB", "Pfl01_1887",
"Pfl01_2049", "Pfl01_2170", "Pfl01_2176", "Pfl01_2295", "Pfl01_2297", "Pfl01_2525",
"Pfl01_2709", "Pfl01_2920", "Pfl01_3039", "Pfl01_3508", "Pfl01_3550", "Pfl01_3800",
"Pfl01_3860", "Pfl01_3972", "Pfl01_4008", "Pfl01_4084", "Pfl01_4086", "Pfl01_4150",
"Pfl01_4257", "Pfl01_4307", "Pfl01_4451", "Pfl01_4487", "Pfl01_4551", "Pfl01_4552",
"gcbC", "Pfl01_4876", "Pfl01_4884", "Pfl01_5150", "Pfl01_5168", "Pfl01_5255",
"Pfl01_5518", "Pfl01_5643")
ggplot(melt.dat.thresh.original, aes(x=Var1, y=value, fill = Var2, colour = Var2)) +
geom_jitter(data = melt.dat.thresh.original, aes(x = Var1, y = value, fill = Var2, colour = Var2, shape = Var2),
position = position_jitterdodge(jitter.width = 0.3), size = 1) +
scale_shape_manual(values=c(21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21))+
ggtitle("Expression relative to mean value in base minimal medium") + xlab("Gene") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black", size =0.5), axis.line.y = element_line(colour = "black", size =0.5) ) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5, size = 15), legend.key = element_blank(),
axis.text.y = element_text(size = 15), text = element_text(size = 20), legend.text = element_text(size = 12)) +
scale_x_discrete("Gene", labels= mylabels, limits = order)+
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression colour shape.pdf", width = 15, height = 6, units = "in")
ggplot(melt.dat.thresh.original, aes(x=Var1, y=value, fill = Var2, colour = Var2)) +
geom_jitter(data = melt.dat.thresh.original, aes(x = Var1, y = value, fill = Var2, colour = Var2, shape = Var2),
position = position_jitterdodge(jitter.width = 0.3), size = 1) +
scale_shape_manual(values=c(21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21))+
ggtitle("Expression relative to mean value in base minimal medium") + xlab("Gene") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black", size =0.5), axis.line.y = element_line(colour = "black", size =0.5) ) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5, size = 15), legend.key = element_blank(),
axis.text.y = element_text(size = 15), text = element_text(size = 20), legend.text = element_text(size = 12)) +
scale_x_discrete("Gene", labels= mylabels, limits = order)+
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression colour shape.pdf", width = 15, height = 6, units = "in")
ggplot(melt.dat.thresh.original, aes(x=Var1, y=value, fill = Var2, colour = Var2)) +
geom_jitter(data = melt.dat.thresh.original, aes(x = Var1, y = value, fill = Var2, colour = Var2, shape = Var2),
position = position_jitterdodge(jitter.width = 0.3), size = 1) +
scale_shape_manual(values=c(21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21))+
ggtitle("Expression relative to mean value in base minimal medium") + xlab("Gene") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black", size =0.5), axis.line.y = element_line(colour = "black", size =0.5) ) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5, size = 15), legend.key = element_blank(),
axis.text.y = element_text(size = 15), text = element_text(size = 20), legend.text = element_text(size = 12)) +
scale_x_discrete("Gene", labels= mylabels, limits = order)+
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression colour shape.pdf", width = 15, height = 6, units = "in")
ggplot(melt.dat.thresh.original, aes(x=Var1, y=value, fill = Var2, colour = Var2)) +
geom_jitter(data = melt.dat.thresh.original, aes(x = Var1, y = value, fill = Var2, colour = Var2, shape = Var2),
position = position_jitterdodge(jitter.width = 0.3), size = 1) +
scale_shape_manual(values=c(21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21))+
ggtitle("Expression relative to mean value in base minimal medium") + xlab("Gene") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black", size =0.5), axis.line.y = element_line(colour = "black", size =0.5) ) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5, size = 15), legend.key = element_blank(),
axis.text.y = element_text(size = 15), text = element_text(size = 20), legend.text = element_text(size = 12)) +
scale_x_discrete("Gene", labels= mylabels, limits = order)+
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression colour shape.pdf", width = 15, height = 6, units = "in")
library("gplots")
library(reshape2)
library(ggrepel)
dat <- read.csv(file = "Data/Selected_solid.csv", check.names = F, stringsAsFactors = T)
rownames(dat) <- dat[,1]
uni.cols <- which(colnames(dat) =="Uni")
k10.cols <- which(colnames(dat) =="K10")
dat <- dat[,-1]
uni <- dat[,uni.cols-1]
K10 <- dat[,k10.cols-1]
dat <- dat[,-c(uni.cols-1,k10.cols-1)]
dat$K10 <- apply(K10,1,FUN = mean)
row.names(uni) <- rownames(dat)
dat.original <- dat
# convert data to reads per 1000
n <- ncol(uni)
for(i in(1:n)){
uni[,i] <- (1000*uni[,i]/ sum(uni[,i]))
}
n <- ncol(dat)
for(i in(1:n)){
dat[,i] <- (1000*dat[,i]/ sum(dat[,i]))
}
#reference medium plot
uni.melt <- melt(as.matrix(uni))
ggplot(uni.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1,  vjust = 0.5 )) +
#  theme(legend.position="none") +
scale_y_continuous(expand = c(0, 0), limits = c(0,220)) +
ggsave(filename = "scatterplot gene expression in biolog.pdf", width = 12, height = 7, units = "in")
# variance in biolog plot
uni.thresh <- as.matrix(log2(sweep(uni, 1, apply(uni,1,mean),  FUN = "/")))
uni.thresh.melt <- melt(as.matrix(uni.thresh))
ggplot(uni.thresh.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Log2 ratio expression (relative to mean)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
#  theme(legend.position="none") +
ggsave(filename = "scatterplot ratio gene expression in biolog.pdf", width = 12, height = 7, units = "in")
#Plot per 1000 reads
dat$uni <- apply(uni,1,FUN = mean)
dat.melt <- melt(as.matrix(dat))
ggplot(dat.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Condition") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1)) +
theme(legend.position="none") +
geom_text(data = dat.melt[dat.melt$Var2 == "uni",], aes(x = dat.melt$Var1[dat.melt$Var2 == "uni"],
y = dat.melt$value[dat.melt$Var2 == "uni"]), label = "--")+
scale_y_continuous(expand = c(0, 0), limits = c(0,300)) +
ggsave(filename = "scatterplot gene expression per 1000 reads.pdf", width = 12, height = 7, units = "in")
plot(sort(dat.melt$Var2[dat.melt$Var1 == "LapA"], decreasing = F) , sort(dat.melt$value[dat.melt$Var1 == "LapA"], decreasing = F))
ggplot(dat.melt[dat.melt$Var1 == "LapA",], aes(x=sort(dat.melt$Var2[dat.melt$Var1 == "LapA"], decreasing = F), y=sort(dat.melt$value[dat.melt$Var1 == "LapA"], decreasing = F))) +
geom_point() +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
xlab("Condition") + ylab("Expression (per 1000 reads)")
# calc SD per carbon in uni
dat.Z <- as.matrix(sweep(sweep(dat, 1, apply(uni,1,mean), FUN = "-"), 1, apply(uni, 1, sd), FUN = "/"))
dat.p <- 2*pnorm(-abs(dat.Z))
dat.p.melt <- melt(as.matrix(dat.p))
dat.p.melt$BH <- p.adjust(dat.p.melt$value, method = "BH")
# calculate p value from Z score matrix
dat.thresh <- as.matrix(log2(sweep(dat, 1, apply(uni,1,mean),  FUN = "/")))
dat.thresh <- dat.thresh[,-51]
# dat.unthresh <- dat.thresh
#
# dat.thresh[2*pnorm(-abs(dat.Z)) >0.05] <- 0
#
# dat.thresh[abs(dat.thresh) < 1] <- 0
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 50) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
for(i in 1:length(rownames(dat.thresh))){
for(j in 1:length(colnames(dat.thresh))){
nanostring.phenotypes$Expression[(i-1)*50+j] <- dat.thresh[i,j]
}
}
no.change.rows <- which(nanostring.phenotypes$Expression ==0)
nanostring.phenotypes$Label <- NA
nanostring.phenotypes$Label[-no.change.rows] <- as.character(nanostring.phenotypes$Condition[-no.change.rows])
#nanostring.phenotypes <- nanostring.phenotypes[-no.change.rows,]
# plot of distribution of ratios to baseline
melt.dat.unthresh <- melt(dat.unthresh)
ggplot(melt.dat.unthresh, aes(x=Var1, y=value, col="black")) +
geom_point(data = melt.dat.unthresh, aes(x=Var1, y=value, col="black"),position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot gene expression.pdf", width = 15, height = 5, units = "in")
ggplot(melt.dat.unthresh, aes(x=Var2, y=value, col="black")) +
geom_point(position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "scatterplot CS expression.pdf", width = 15, height = 5, units = "in")
melt.dat.thresh <- melt(dat.thresh)
melt.dat.thresh.original <- melt.dat.thresh
melt.dat.thresh <- melt.dat.thresh[which(dat.p.melt$BH <0.05),]
melt.dat.thresh.removed <- melt.dat.unthresh[which(dat.p.melt$BH >0.05),]
melt.dat.thresh.removed <- melt.dat.thresh.removed[which(melt.dat.thresh.removed$Var2 != "uni"),]
mylabels <- c(expression("Pfl01_0048"), expression("Pfl01_0050"), expression(italic("lapD")), expression("Pfl01_0190"), expression("Pfl01_0192"), expression("Pfl01_0264"),
expression("Pfl01_0460"), expression(italic("gcbA")), expression("Pfl01_0692"), expression("Pfl01_0958"), expression(italic("wspR")), expression("Pfl01_1252"),
expression("Pfl01_1323"), expression("Pfl01_1336"), expression("Pfl01_1532"), expression(italic("rapA")), expression(italic("gcbB")), expression("Pfl01_1887"),
expression("Pfl01_2049"), expression("Pfl01_2170"), expression("Pfl01_2176"), expression("Pfl01_2295"), expression("Pfl01_2297"), expression("Pfl01_2525"),
expression("Pfl01_2709"), expression("Pfl01_2920"), expression("Pfl01_3039"), expression("Pfl01_3508"), expression("Pfl01_3550"), expression("Pfl01_3800"),
expression("Pfl01_3860"), expression("Pfl01_3972"), expression("Pfl01_4008"), expression("Pfl01_4084"), expression("Pfl01_4086"), expression("Pfl01_4150"),
expression("Pfl01_4257"), expression("Pfl01_4307"), expression("Pfl01_4451"), expression("Pfl01_4487"), expression("Pfl01_4551"), expression("Pfl01_4552"),
expression(italic("gcbC")), expression("Pfl01_4876"), expression("Pfl01_4884"), expression("Pfl01_5150"), expression("Pfl01_5168"), expression("Pfl01_5255"),
expression("Pfl01_5518"), expression("Pfl01_5643"))
order <- c("Pfl01_0048", "Pfl01_0050", "lapD", "Pfl01_0190", "Pfl01_0192", "Pfl01_0264",
"Pfl01_0460", "gcbA", "Pfl01_0692", "Pfl01_0958", "wspR", "Pfl01_1252",
"Pfl01_1323", "Pfl01_1336", "Pfl01_1532", "rapA", "gcbB", "Pfl01_1887",
"Pfl01_2049", "Pfl01_2170", "Pfl01_2176", "Pfl01_2295", "Pfl01_2297", "Pfl01_2525",
"Pfl01_2709", "Pfl01_2920", "Pfl01_3039", "Pfl01_3508", "Pfl01_3550", "Pfl01_3800",
"Pfl01_3860", "Pfl01_3972", "Pfl01_4008", "Pfl01_4084", "Pfl01_4086", "Pfl01_4150",
"Pfl01_4257", "Pfl01_4307", "Pfl01_4451", "Pfl01_4487", "Pfl01_4551", "Pfl01_4552",
"gcbC", "Pfl01_4876", "Pfl01_4884", "Pfl01_5150", "Pfl01_5168", "Pfl01_5255",
"Pfl01_5518", "Pfl01_5643")
library("gplots")
library(reshape2)
library(ggrepel)
dat <- read.csv(file = "Data/Selected_solid.csv", check.names = F, stringsAsFactors = T)
rownames(dat) <- dat[,1]
uni.cols <- which(colnames(dat) =="Uni")
k10.cols <- which(colnames(dat) =="K10")
dat <- dat[,-1]
uni <- dat[,uni.cols-1]
K10 <- dat[,k10.cols-1]
dat <- dat[,-c(uni.cols-1,k10.cols-1)]
dat$K10 <- apply(K10,1,FUN = mean)
row.names(uni) <- rownames(dat)
dat.original <- dat
# convert data to reads per 1000
n <- ncol(uni)
for(i in(1:n)){
uni[,i] <- (1000*uni[,i]/ sum(uni[,i]))
}
n <- ncol(dat)
for(i in(1:n)){
dat[,i] <- (1000*dat[,i]/ sum(dat[,i]))
}
#reference medium plot
uni.melt <- melt(as.matrix(uni))
ggplot(uni.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1,  vjust = 0.5 )) +
#  theme(legend.position="none") +
scale_y_continuous(expand = c(0, 0), limits = c(0,220)) +
ggsave(filename = "Results/scatterplot gene expression in biolog.pdf", width = 12, height = 7, units = "in")
# variance in biolog plot
uni.thresh <- as.matrix(log2(sweep(uni, 1, apply(uni,1,mean),  FUN = "/")))
uni.thresh.melt <- melt(as.matrix(uni.thresh))
ggplot(uni.thresh.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Gene") + ylab("Log2 ratio expression (relative to mean)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
#  theme(legend.position="none") +
ggsave(filename = "Results/scatterplot ratio gene expression in biolog.pdf", width = 12, height = 7, units = "in")
#Plot per 1000 reads
dat$uni <- apply(uni,1,FUN = mean)
dat.melt <- melt(as.matrix(dat))
ggplot(dat.melt, aes(x=Var1, y=value, col=Var2)) +
geom_point() +
xlab("Condition") + ylab("Expression (per 1000 reads)") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1)) +
theme(legend.position="none") +
geom_text(data = dat.melt[dat.melt$Var2 == "uni",], aes(x = dat.melt$Var1[dat.melt$Var2 == "uni"],
y = dat.melt$value[dat.melt$Var2 == "uni"]), label = "--")+
scale_y_continuous(expand = c(0, 0), limits = c(0,300)) +
ggsave(filename = "Results/scatterplot gene expression per 1000 reads.pdf", width = 12, height = 7, units = "in")
plot(sort(dat.melt$Var2[dat.melt$Var1 == "LapA"], decreasing = F) , sort(dat.melt$value[dat.melt$Var1 == "LapA"], decreasing = F))
ggplot(dat.melt[dat.melt$Var1 == "LapA",], aes(x=sort(dat.melt$Var2[dat.melt$Var1 == "LapA"], decreasing = F), y=sort(dat.melt$value[dat.melt$Var1 == "LapA"], decreasing = F))) +
geom_point() +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
xlab("Condition") + ylab("Expression (per 1000 reads)")
# calc SD per carbon in uni
dat.Z <- as.matrix(sweep(sweep(dat, 1, apply(uni,1,mean), FUN = "-"), 1, apply(uni, 1, sd), FUN = "/"))
dat.p <- 2*pnorm(-abs(dat.Z))
dat.p.melt <- melt(as.matrix(dat.p))
dat.p.melt$BH <- p.adjust(dat.p.melt$value, method = "BH")
# calculate p value from Z score matrix
dat.thresh <- as.matrix(log2(sweep(dat, 1, apply(uni,1,mean),  FUN = "/")))
dat.thresh <- dat.thresh[,-51]
# dat.unthresh <- dat.thresh
#
# dat.thresh[2*pnorm(-abs(dat.Z)) >0.05] <- 0
#
# dat.thresh[abs(dat.thresh) < 1] <- 0
nanostring.phenotypes <- data.frame(Gene = rep(rownames(dat.thresh), each = 50) ,
Condition = rep(colnames(dat.thresh), length(rownames(dat))), Expression = 1)
for(i in 1:length(rownames(dat.thresh))){
for(j in 1:length(colnames(dat.thresh))){
nanostring.phenotypes$Expression[(i-1)*50+j] <- dat.thresh[i,j]
}
}
no.change.rows <- which(nanostring.phenotypes$Expression ==0)
nanostring.phenotypes$Label <- NA
nanostring.phenotypes$Label[-no.change.rows] <- as.character(nanostring.phenotypes$Condition[-no.change.rows])
#nanostring.phenotypes <- nanostring.phenotypes[-no.change.rows,]
# plot of distribution of ratios to baseline
melt.dat.unthresh <- melt(dat.unthresh)
ggplot(melt.dat.unthresh, aes(x=Var1, y=value, col="black")) +
geom_point(data = melt.dat.unthresh, aes(x=Var1, y=value, col="black"),position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "Results/scatterplot gene expression.pdf", width = 15, height = 5, units = "in")
ggplot(melt.dat.unthresh, aes(x=Var2, y=value, col="black")) +
geom_point(position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "Results/scatterplot CS expression.pdf", width = 15, height = 5, units = "in")
melt.dat.thresh <- melt(dat.thresh)
melt.dat.thresh.original <- melt.dat.thresh
melt.dat.thresh <- melt.dat.thresh[which(dat.p.melt$BH <0.05),]
melt.dat.thresh.removed <- melt.dat.unthresh[which(dat.p.melt$BH >0.05),]
melt.dat.thresh.removed <- melt.dat.thresh.removed[which(melt.dat.thresh.removed$Var2 != "uni"),]
mylabels <- c(expression("Pfl01_0048"), expression("Pfl01_0050"), expression(italic("lapD")), expression("Pfl01_0190"), expression("Pfl01_0192"), expression("Pfl01_0264"),
expression("Pfl01_0460"), expression(italic("gcbA")), expression("Pfl01_0692"), expression("Pfl01_0958"), expression(italic("wspR")), expression("Pfl01_1252"),
expression("Pfl01_1323"), expression("Pfl01_1336"), expression("Pfl01_1532"), expression(italic("rapA")), expression(italic("gcbB")), expression("Pfl01_1887"),
expression("Pfl01_2049"), expression("Pfl01_2170"), expression("Pfl01_2176"), expression("Pfl01_2295"), expression("Pfl01_2297"), expression("Pfl01_2525"),
expression("Pfl01_2709"), expression("Pfl01_2920"), expression("Pfl01_3039"), expression("Pfl01_3508"), expression("Pfl01_3550"), expression("Pfl01_3800"),
expression("Pfl01_3860"), expression("Pfl01_3972"), expression("Pfl01_4008"), expression("Pfl01_4084"), expression("Pfl01_4086"), expression("Pfl01_4150"),
expression("Pfl01_4257"), expression("Pfl01_4307"), expression("Pfl01_4451"), expression("Pfl01_4487"), expression("Pfl01_4551"), expression("Pfl01_4552"),
expression(italic("gcbC")), expression("Pfl01_4876"), expression("Pfl01_4884"), expression("Pfl01_5150"), expression("Pfl01_5168"), expression("Pfl01_5255"),
expression("Pfl01_5518"), expression("Pfl01_5643"))
order <- c("Pfl01_0048", "Pfl01_0050", "lapD", "Pfl01_0190", "Pfl01_0192", "Pfl01_0264",
"Pfl01_0460", "gcbA", "Pfl01_0692", "Pfl01_0958", "wspR", "Pfl01_1252",
"Pfl01_1323", "Pfl01_1336", "Pfl01_1532", "rapA", "gcbB", "Pfl01_1887",
"Pfl01_2049", "Pfl01_2170", "Pfl01_2176", "Pfl01_2295", "Pfl01_2297", "Pfl01_2525",
"Pfl01_2709", "Pfl01_2920", "Pfl01_3039", "Pfl01_3508", "Pfl01_3550", "Pfl01_3800",
"Pfl01_3860", "Pfl01_3972", "Pfl01_4008", "Pfl01_4084", "Pfl01_4086", "Pfl01_4150",
"Pfl01_4257", "Pfl01_4307", "Pfl01_4451", "Pfl01_4487", "Pfl01_4551", "Pfl01_4552",
"gcbC", "Pfl01_4876", "Pfl01_4884", "Pfl01_5150", "Pfl01_5168", "Pfl01_5255",
"Pfl01_5518", "Pfl01_5643")
dat.unthresh <- dat.thresh
melt.dat.unthresh <- melt(dat.unthresh)
ggplot(melt.dat.unthresh, aes(x=Var1, y=value, col="black")) +
geom_point(data = melt.dat.unthresh, aes(x=Var1, y=value, col="black"),position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "Results/scatterplot gene expression.pdf", width = 15, height = 5, units = "in")
ggplot(melt.dat.unthresh, aes(x=Var2, y=value, col="black")) +
geom_point(position = position_jitterdodge(dodge.width = 1), size = 0.5, alpha = 1) +
# geom_text_repel(data = nanostring.phenotypes, aes(x = nanostring.phenotypes$Gene, y = nanostring.phenotypes$Expression ), label = nanostring.phenotypes$Label,
#                size = 2, force =0.25, min.segment.length = unit(0, "lines"))+
ggtitle("Expression relative to mean base medium") + xlab("Condition") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
theme(legend.position="none") +
geom_hline(yintercept = 0) +
ggsave(filename = "Results/scatterplot CS expression.pdf", width = 15, height = 5, units = "in")
melt.dat.thresh <- melt(dat.thresh)
melt.dat.thresh.original <- melt.dat.thresh
melt.dat.thresh <- melt.dat.thresh[which(dat.p.melt$BH <0.05),]
melt.dat.thresh.removed <- melt.dat.unthresh[which(dat.p.melt$BH >0.05),]
melt.dat.thresh.removed <- melt.dat.thresh.removed[which(melt.dat.thresh.removed$Var2 != "uni"),]
mylabels <- c(expression("Pfl01_0048"), expression("Pfl01_0050"), expression(italic("lapD")), expression("Pfl01_0190"), expression("Pfl01_0192"), expression("Pfl01_0264"),
expression("Pfl01_0460"), expression(italic("gcbA")), expression("Pfl01_0692"), expression("Pfl01_0958"), expression(italic("wspR")), expression("Pfl01_1252"),
expression("Pfl01_1323"), expression("Pfl01_1336"), expression("Pfl01_1532"), expression(italic("rapA")), expression(italic("gcbB")), expression("Pfl01_1887"),
expression("Pfl01_2049"), expression("Pfl01_2170"), expression("Pfl01_2176"), expression("Pfl01_2295"), expression("Pfl01_2297"), expression("Pfl01_2525"),
expression("Pfl01_2709"), expression("Pfl01_2920"), expression("Pfl01_3039"), expression("Pfl01_3508"), expression("Pfl01_3550"), expression("Pfl01_3800"),
expression("Pfl01_3860"), expression("Pfl01_3972"), expression("Pfl01_4008"), expression("Pfl01_4084"), expression("Pfl01_4086"), expression("Pfl01_4150"),
expression("Pfl01_4257"), expression("Pfl01_4307"), expression("Pfl01_4451"), expression("Pfl01_4487"), expression("Pfl01_4551"), expression("Pfl01_4552"),
expression(italic("gcbC")), expression("Pfl01_4876"), expression("Pfl01_4884"), expression("Pfl01_5150"), expression("Pfl01_5168"), expression("Pfl01_5255"),
expression("Pfl01_5518"), expression("Pfl01_5643"))
order <- c("Pfl01_0048", "Pfl01_0050", "lapD", "Pfl01_0190", "Pfl01_0192", "Pfl01_0264",
"Pfl01_0460", "gcbA", "Pfl01_0692", "Pfl01_0958", "wspR", "Pfl01_1252",
"Pfl01_1323", "Pfl01_1336", "Pfl01_1532", "rapA", "gcbB", "Pfl01_1887",
"Pfl01_2049", "Pfl01_2170", "Pfl01_2176", "Pfl01_2295", "Pfl01_2297", "Pfl01_2525",
"Pfl01_2709", "Pfl01_2920", "Pfl01_3039", "Pfl01_3508", "Pfl01_3550", "Pfl01_3800",
"Pfl01_3860", "Pfl01_3972", "Pfl01_4008", "Pfl01_4084", "Pfl01_4086", "Pfl01_4150",
"Pfl01_4257", "Pfl01_4307", "Pfl01_4451", "Pfl01_4487", "Pfl01_4551", "Pfl01_4552",
"gcbC", "Pfl01_4876", "Pfl01_4884", "Pfl01_5150", "Pfl01_5168", "Pfl01_5255",
"Pfl01_5518", "Pfl01_5643")
ggplot(melt.dat.thresh.original, aes(x=Var1, y=value, fill = Var2, colour = Var2)) +
geom_jitter(data = melt.dat.thresh.original, aes(x = Var1, y = value, fill = Var2, colour = Var2, shape = Var2),
position = position_jitterdodge(jitter.width = 0.3), size = 1) +
scale_shape_manual(values=c(21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21:25, 21))+
ggtitle("Expression relative to mean value in base minimal medium") + xlab("Gene") + ylab("Log2 ratio expression") +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line.x = element_line(colour = "black", size =0.5), axis.line.y = element_line(colour = "black", size =0.5) ) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5, size = 15), legend.key = element_blank(),
axis.text.y = element_text(size = 15), text = element_text(size = 20), legend.text = element_text(size = 12)) +
scale_x_discrete("Gene", labels= mylabels, limits = order)+
geom_hline(yintercept = 0) +
ggsave(filename = "Results/scatterplot gene expression colour shape.pdf", width = 15, height = 6, units = "in")
